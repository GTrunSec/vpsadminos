diff --git a/support/include/nfs/export.h b/support/include/nfs/export.h
index 0eca828..8fa2a09 100644
--- a/support/include/nfs/export.h
+++ b/support/include/nfs/export.h
@@ -28,6 +28,7 @@
 #define NFSEXP_NOACL		0x8000 /* reserved for possible ACL related use */
 #define NFSEXP_V4ROOT		0x10000
 #define NFSEXP_PNFS            0x20000
+#define NFSEXP_ROOTUID         0x40000
 /*
  * All flags supported by the kernel before addition of the
  * export_features interface:
diff --git a/support/include/nfslib.h b/support/include/nfslib.h
index b09fce4..b289269 100644
--- a/support/include/nfslib.h
+++ b/support/include/nfslib.h
@@ -84,6 +84,7 @@ struct exportent {
 	char *		e_uuid;
 	struct sec_entry e_secinfo[SECFLAVOR_COUNT+1];
 	unsigned int	e_ttl;
+	unsigned int    e_root_uid;
 };
 
 struct rmtabent {
diff --git a/support/nfs/exports.c b/support/nfs/exports.c
index b59d187..63e3e0f 100644
--- a/support/nfs/exports.c
+++ b/support/nfs/exports.c
@@ -286,6 +286,9 @@ putexportent(struct exportent *ep)
 	if (ep->e_mountpoint)
 		fprintf(fp, "mountpoint%s%s,",
 			ep->e_mountpoint[0]?"=":"", ep->e_mountpoint);
+	if (ep->e_flags & NFSEXP_ROOTUID) {
+		fprintf(fp, "root_uid=%d,", ep->e_root_uid);
+	}
 	switch (ep->e_fslocmethod) {
 	case FSLOC_NONE:
 		break;
@@ -662,6 +665,10 @@ bad_option:
 			active = parse_flavors(opt+4, ep);
 			if (!active)
 				goto bad_option;
+		} else if (strncmp(opt, "root_uid=", 9) == 0) {
+			char *oe;
+			setflags(NFSEXP_ROOTUID, active, ep);
+			ep->e_root_uid = strtoul(opt+9, &oe, 0);
 		} else {
 			xlog(L_ERROR, "%s:%d: unknown keyword \"%s\"\n",
 					flname, flline, opt);
diff --git a/utils/mountd/cache.c b/utils/mountd/cache.c
index 2cb370f..0977a18 100644
--- a/utils/mountd/cache.c
+++ b/utils/mountd/cache.c
@@ -882,6 +882,12 @@ static void write_secinfo(char **bp, int *blen, struct exportent *ep, int flag_m
 
 }
 
+static void write_root_uid(char **bp, int *blen, unsigned int root_uid)
+{
+	qword_add(bp, blen, "root_uid");
+	qword_adduint(bp, blen, root_uid);
+}
+
 static int dump_to_cache(int f, char *buf, int buflen, char *domain,
 			 char *path, struct exportent *exp, int ttl)
 {
@@ -905,6 +911,10 @@ static int dump_to_cache(int f, char *buf, int buflen, char *domain,
 		qword_addint(&bp, &blen, exp->e_fsid);
 		write_fsloc(&bp, &blen, exp);
 		write_secinfo(&bp, &blen, exp, flag_mask);
+
+		if (exp->e_flags & NFSEXP_ROOTUID)
+			write_root_uid(&bp, &blen, exp->e_root_uid);
+
 		if (exp->e_uuid == NULL || different_fs) {
 			char u[16];
 			if (uuid_by_path(path, 0, 16, u)) {
