#!/usr/bin/env ruby
require 'ipaddress'
require 'osctld'
require 'osctld/template'

Network = Struct.new(:enabled?, :via, :addrs)

networks = [4, 6].map do |v|
  enabled = ENV["CT_HAS_IPV#{v}"] == '1'

  if enabled
    Network.new(
      true,
      OsCtld::Routing::Via.for(IPAddress.parse(ENV["CT_IPV#{v}_VIA"])),
      ENV["CT_IPV#{v}_ADDRS"].split.map { |v| IPAddress.parse(v) }
    )

  else
    Network.new(false, nil, [])
  end
end

OsCtld::Template.render_to(
  'network/debian',
  {networks: {4 => networks[0], 6 => networks[1]}},
  File.join(ENV['CT_ROOT'], 'etc', 'network', 'interfaces')
)
