#!/usr/bin/env ruby
require 'json'
require 'socket'

ctid = ARGV[0]
veth = ARGV[4]

if ctid.nil? || veth.nil?
  warn "Expected arguments: <ctid> net up veth <devname>, "+
       "received #{ARGV.join(' ')}"
  exit(false)
end

if /^\/run\/osctl\/pools\/([^\/]+)\/hooks/ !~ $0
  warn "Unable to detect pool name from '#{$0}'"
  exit(false)
end

pool = $1

base = File.basename($0)
ctid2, index = base.split('.')

if ctid != ctid2
  warn "Expected to handle CT '#{ctid2}', but was called for '#{ctid}' instead"
  exit(false)

elsif !index
  warn "Expected to be called via symlink named as: <ctid>.<interface index>, "+
    "called as '#{base}' instead"
  exit(false)
end

s = UNIXSocket.new("/run/osctl/user-control/#{Process.uid}.sock")
s.send({cmd: :veth_up, opts: {
  id: ARGV[0],
  pool: pool,
  index: index.to_i,
  veth: ARGV[4],
}}.to_json + "\n", 0)
ret = JSON.parse(s.readline, symbolize_names: true)
s.close

exit(true) if ret[:status]
warn "Error: #{ret[:message]}"
exit(false)
