module OsCtld
  class Commands::Container::Create < Commands::Base
    handle :ct_create

    include Utils::Log
    include Utils::System
    include Utils::Zfs

    def execute
      ct = Container.new(opts[:id], opts[:user], load: false)

      zfs(:create, nil, ct.dataset)
      Dir.mkdir(ct.rootfs, 0750)

      syscmd("tar -xzf #{opts[:template]} -C #{ct.rootfs}")

      zfs(:unmount, nil, ct.dataset)
      zfs(:set, "uidoffset=#{ct.uid_offset} gidoffset=#{ct.gid_offset}", ct.dataset)
      zfs(:mount, nil, ct.dataset)

      os = File.basename(opts[:template]).split('-').first

      File.write(ct.lxc_config_path, <<END
# Generated by osctld
lxc.include = /usr/share/lxc/config/#{os}.common.conf
lxc.include = /usr/share/lxc/config/#{os}.userns.conf

lxc.rootfs.path = #{ct.rootfs}
lxc.arch = x86_64
lxc.uts.name = #{ct.hostname}
lxc.idmap = u 0 #{ct.uid_offset} #{ct.uid_size}
lxc.idmap = g 0 #{ct.gid_offset} #{ct.gid_size}
END
      )

      ContainerList.add(ct)

      # Create dataset
      # Extract template
      # Set UID/GID offset
      # Create LXC config file
      # Create VPS config for osctl
      # Ensure writable log file
      # Register to ContainerList

      ok
    end
  end
end
